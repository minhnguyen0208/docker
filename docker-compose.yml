name: ${PROJECT}

services:
  app:
    build:
      context: .
      dockerfile: php/Dockerfile
      target: dev
      args:
        WWWUSER: ${UID:-1000}
        WWWGROUP: ${GID:-1000}
    image: ${PROJECT}-php:${PHP_TAG}
    volumes:
      - ${APP_PATH}:/var/www/html
    environment:
      APP_ENV: local
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: "1"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  node:
    image: node:20-alpine
    working_dir: /var/www/html
    command: >
      sh -lc "
        corepack enable &&
        corepack prepare yarn@1.22.22 --activate &&
        yarn config set registry https://registry.npmjs.org &&
        yarn install --frozen-lockfile || yarn install &&
        yarn dev --host 0.0.0.0
      "
    ports:
      - "${VITE_PORT}:5173"
    volumes:
      - ${FE_PATH}:/var/www/html
    environment:
      NODE_ENV: development
    profiles: ["fe"]

  web:
    image: nginx:1.27-alpine
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    environment:
      SERVER_NAME: ${DOMAIN:-localhost}
      # point these to the files you mount in ./certs
      SSL_CERT: /etc/nginx/certs/${SSL_CERT_FILE:-localhost.crt}
      SSL_CERT_KEY: /etc/nginx/certs/${SSL_CERT_KEY_FILE:-localhost.key}
    volumes:
      - ${APP_PATH:-.}:/var/www/html
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - app

  queue:
    image: ${PROJECT}-php:${PHP_TAG}
    command: php artisan queue:work --verbose --tries=3 --timeout=120
    volumes:
      - ${APP_PATH}:/var/www/html
    depends_on:
      - app
    profiles: ["worker"]

  scheduler:
    image: ${PROJECT}-php:${PHP_TAG}
    command: sh -lc "while true; do php artisan schedule:run --verbose --no-interaction; sleep 60; done"
    volumes:
      - ${APP_PATH}:/var/www/html
    depends_on:
      - app
    profiles: ["worker"]

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT}
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USER}", "-p${DB_PASS}"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"

volumes:
  dbdata:
